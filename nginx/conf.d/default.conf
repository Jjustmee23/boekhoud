server {
    listen 80;
    server_name _;

    client_max_body_size 100M;

    # Redirect to HTTPS if available (uncomment in production)
    # location / {
    #     return 301 https://$host$request_uri;
    # }

    location / {
        proxy_pass http://web:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /app/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
}

# HTTPS server (uncomment in production)
# server {
#     listen 443 ssl;
#     server_name _;
#
#     client_max_body_size 100M;
#
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#
#     location / {
#         proxy_pass http://web:5000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#
#     location /static/ {
#         alias /app/static/;
#         expires 30d;
#         add_header Cache-Control "public, max-age=2592000";
#     }
# }