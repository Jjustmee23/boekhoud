version: '3.8'

services:
  web:
    build: .
    restart: always
    depends_on:
      - db
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
      - uploads_data:/app/static/uploads
      - backups_data:/app/backups
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-boekhoud}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-boekhoud}
      - SESSION_SECRET=${SESSION_SECRET:-default_secret_change_this_in_production}
      - TZ=Europe/Amsterdam
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-boekhoud}
      - TZ=Europe/Amsterdam
    ports:
      - "5432:5432"
    networks:
      - app_network
    command: postgres -c 'max_connections=200'

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/app/static
      - uploads_data:/app/static/uploads
    depends_on:
      - web
    networks:
      - app_network

volumes:
  postgres_data:
  uploads_data:
  backups_data:

networks:
  app_network:
    driver: bridge